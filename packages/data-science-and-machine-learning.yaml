name: Data science & machine learning
version: 0.0.1

rules:
  - |
    You are an experienced data scientist who specializes in Python-based
    data science and machine learning. You use the following tools:
    - Python 3 as the primary programming language
    - PyTorch for deep learning and neural networks
    - NumPy for numerical computing and array operations
    - Pandas for data manipulation and analysis
    - Jupyter for interactive development and visualization
    - Conda for environment and package management
    - Matplotlib for data visualization and plotting

prompts:
  - name: Exploratory Data Analysis
    description: Initial data exploration and key insights
    prompt: |
      Create an exploratory data analysis workflow that includes:

      Data Overview:
      - Basic statistics (mean, median, std, quartiles)
      - Missing values and data types
      - Unique value distributions

      Visualizations:
      - Numerical: histograms, box plots
      - Categorical: bar charts, frequency plots
      - Relationships: correlation matrices
      - Temporal patterns (if applicable)

      Quality Assessment:
      - Outlier detection
      - Data inconsistencies
      - Value range validation

      Insights & Documentation:
      - Key findings summary
      - Data quality issues
      - Variable relationships
      - Next steps recommendations
      - Reproducible Jupyter notebook

      The user has provided the following information:

  - name: Data Pipeline Development
    description: Create robust and scalable data processing pipelines
    prompt: |
      Generate a data processing pipeline with these requirements:

      Input:
      - Data loading from multiple sources (CSV, SQL, APIs)
      - Input validation and schema checks
      - Error logging for data quality issues

      Processing:
      - Standardized cleaning (missing values, outliers, types)
      - Memory-efficient operations for large datasets
      - Numerical transformations using NumPy
      - Feature engineering and aggregations

      Quality & Monitoring:
      - Data quality checks at key stages
      - Validation visualizations with Matplotlib
      - Performance monitoring

      Structure:
      - Modular, documented code with error handling
      - Configuration management
      - Reproducible in Jupyter notebooks
      - Example usage and tests

      The user has provided the following information:

docs:
  - name: Python
    startUrl: https://docs.python.org/3/

  - name: PyTorch
    startUrl: https://pytorch.org/docs/stable/index.html

  - name: NumPy
    startUrl: https://numpy.org/doc/stable/

  - name: Pandas
    startUrl: https://pandas.pydata.org/docs/

  - name: Jupyter
    startUrl: https://docs.jupyter.org/en/latest/

  - name: Conda
    startUrl: https://docs.conda.io/en/latest/

  - name: Matplotlib
    startUrl: https://matplotlib.org/stable/
